To run any playbook use the following command

$ ansible-playbook <playbook.yml>

To check the playbook for syntax errors

$ ansible-playbook <playbook.yml> --syntax-check

To view hosts list

$ ansible-playbook <playbook.yml> --list-hosts

Example 1: Create the file on the target machines or servers as mentioned in the inventory file and the webserver’s group, save the below code with .yml extension and run the playbook.

- hosts: webservers
  become: true
  tasks:
  - name: Create a file
    file: path=/home/remotehostname/raju.txt state=touch

In the above example, we have used the file module to create the file.


Example 2: Create a directory with the mode as 775 and owner/group as Ansible.

---
- hosts: webservers
  become: true
  tasks:
  - name: Create directory
    file: path=/home/ansible/niranjan state=directory mode=775 owner=ansible group=ansible

Example 3: Create multiple directories. To create multiple directories with one single task you can use the loop with_items statement. So when you run the below playbook it is interpreted as 3 different tasks.

---
- hosts: web-servers
  become: true
  tasks:
  - name: Create multiple directories
    file: path={{item}} state=directory
    with_items:
     - '/home/ansnode-1/vn1'
     - '/home/ansnode-1/vn2'
     - '/home/ansnode-1/vn3'

Example 4: Create a user. Let’s look at the user module to create and delete users in the playbook.

---
- hosts: webservers
  become: true
  tasks:
  - name: Create User
    user: name=niranjan password=niranjan groups=ansible shell=/bin/bash
    
    Example 5: Remove user. Removing a user is very easy and it will need the state to be set to absent. This is equivalent to the userdel command in Linux.
---
- hosts: web-servers
  become: true
  tasks:
  - name: Remove User
    user:
     name=rajesh state=absent remove=yes force=yes
     
     In the above playbook, remove=yes will remove the home directory and force=yes will remove the files in the directory
     
     Example 6: Copy content to a file using the copy module.

If you need to copy a file to the target machines or servers use the src and dest in the copy module.

---
- hosts: webservers
  become: true
  tasks:
  - name: Copy content to file
    copy: content="Hello World Niranjan \n" dest=/home/ansible/niranjan.txt

For Example,

copy: src=/home/ansible/niranjan.txt dest=/tmp/niranjan.txt #will copy content from niranjan.txt in ansibleserver to remote server by creating new file in /tmp if it is not created 


Example 7: Replace all instances of a string.

Using replace module we can replace a word with another word. The replace module will need 3 parameters i.e. ‘path’, ‘regexp’ (to find the particular word) and ‘replace’ (providing another word for replacement).
- hosts: web-servers
  become: true
  tasks:
  - name: Replace example
    replace:
     path: /home/ansnode-1/raju.txt  #remoteserver file path
     regexp: 'this'
     replace: "world"


Example 8: Archive or ZIP files and Folders

Using the Ansible archive module you can compress files or folders to ‘zip’, ‘.gz’, or ‘bz2’ format.

Note: The files or folders to be compressed should be available on the target servers and should have the packages for tar, bzip2, gzip, zip file installed on them. You can have a separate playbook task for installing these packages.

---
- hosts: all
  become: true
  tasks:
  - name: Ansible zip file example
    archive:
     path: /home/ansible/niranjan.txt
     dest: /home/ansible/niranjan.zip
     format: zip
     
     ---
- hosts: all
  tasks:
  - name: Ansible zip multiple files example
  archive:
   path:
    - /home/ansible/niranjan1.txt
    - /home/ansible/niranjan2.txt
   dest: /home/ansible/niranjan.zip
   format: zip

The above playbook will zip multiple files to niranjan.zip file.

- hosts: all
  tasks:
  - name: Ansible zip directory example
    archive:
     path:
      - /home/ansible/*
     dest: /home/ansible/niranjan.zip
     format: zip

The above playbook will zip all files in the /home/ansible directory.

If you want to zip contents from a particular directory specify that folder ex,/home/ansible/Downloads

The file should be in remote servers
