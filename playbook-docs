1.tomcat-setup.yml

git clone https://github.com/rjshk013/tomcatserver-ansible

cd tomcatserver-ansible

ls
hosts   LICENSE  README.md  roles  tomcat-setup.yml

Update your inventory:

you can see hosts file when you clone the repo.update your inventory using this file.
eg: 

[tomcat-nodes]
web1 ansible_host=192.168.10.15
[tomcat-nodes:vars]
ansible_python_interpreter=/usr/bin/python3
ansible_user='ansnode-1'
ansible_become='yes'
ansible_become_method='sudo'

Check inventory connfiguration:
ansible-inventory -i hosts --list -y

will get output as 

all:
  children:
    tomcat-nodes:
      hosts:
        web1:
          ansible_host: 192.168.10.15
          ansible_python_interpreter: /usr/bin/python3
    ungrouped: {}



Update variables in playbook file( tomcat-setup.yml)– Set Tomcat version, remote user and Tomcat UI access credentials 

vim tomcat-setup.yml
---
- name: Tomcat deployment playbook
  hosts: tomcat-nodes       # Inventory hosts group / server to act on
  become: yes               # If to escalate privilege
  become_method: sudo       # Set become method
  remote_user: root         # Update username for remote server
  vars:
    tomcat_ver: 9.0.30                          # Tomcat version to install
    ui_manager_user: manager                    # User who can access the UI manager section only
    ui_manager_pass: Str0ngManagerP@ssw3rd      # UI manager user password
    ui_admin_username: admin                    # User who can access bpth manager and admin UI sections
    ui_admin_pass: Str0ngAdminP@ssw3rd          # UI admin password
  roles:
    - tomcat


Run palaybook
---------------

Run the playbook from the cloned directory

ansible-playbook -i hosts tomcat-setup.yml


Install multiple packages using ansible apt module:

-------------------------------------------
---
 - name: Playbook to install multi-packages
   hosts: web-servers
   become: true
   tasks:
    - name: Ansible apt install multi-packages
      apt: name={{ item}} state=present
      with_items:
       - git
       - python3-pip

Install pip packages using ansible pip module:
----------------------------------------------
- hosts: web-servers
  tasks:
  - name: Installing pymysql python library using Ansible pip module
    pip:
      name: pymysql,psycopg2


Removing a Python library

You can remove a python library in a similar manner by just changing the state to ‘absent’. The following task will remove the ‘NumPy’ and ‘SciPy’ Python libraries from the remote servers.

- hosts: all
  tasks:
  - name: Removing Python libraries
    pip:
      name: NumPy,SciPy
      state: absent
      
      Using requirements.txt file 
      ----------------------------
      
      In the below task, I am trying to execute the requirements file in the location /tmp/req.txt.
      
      - hosts: all
  tasks:
  - name: Installing python libraries using requirements file in Ansible
    pip:
      requirements: req.txt
      chdir: /tmp
      
      
      Need to create req.txt on remote server before running playbook
      
      req.txt
      -------
nltk==3.0.0
numpy<2.0.0
scipy>=1.0.0
pymysql      



requirements.yml
-----------------
If you need to install multiple packages using apt module & view the installed packages in a loop ,use this playbook and edit required packages .

if you want to troubleshoot run playbook with -vvvv

ansible-playbook -i ansible/inventory requirements.yml


Playbooks for centos
---------------------

Need to set python enterpretor 2 instead of python 3







